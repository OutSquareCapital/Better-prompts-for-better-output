Je veux que tu édite le fichier __init__.pyi de manière exhaustive pour mon package joint, avec les spécifications suivantes :

1. **Structure Globale** :
   - En-tête avec description high-level du package exhaustif
   - Organisation en sections claires correspondant aux sous-modules
   - Export explicite via __all__, tu dois donc te concentrer sur ces classes et methods.

2. **Format des Docstrings** :
   - Uniquement en """triple quotes""" (pas de # comments)
   - Markdown complet avec :
     * **Titres** en gras (**Args**, **Returns**)
     * `backticks` pour les noms de paramètres/types
     * ```python blocks pour tous les exemples
   - Pour les classes :
     * Docstring de classe EXHAUSTIF (concept métier + usage général + init process + attributs)
     * Docstring pour chaque méthode
   - Pour les packages : 
     * Meme principe que pour les classes, donc exhaustif et high level.

3. **Spécificités Techniques** :
   - Highlight des types dans la doc (ex: `list[Asset]`)
   - Exemples concrets avec valeurs réalistes
   - Utilisation de ... pour les implémentations
   - Pas de duplication depuis les .py

4. **Style Demandé** :
   - Professionnel mais exhaustif
   - Orientation "business logic" claire
   - Plutôt descriptif par langage humain, plutot que exemples abstraits de code

5. **Contraintes Stricte** :
   - Aucun # comment
   - Priorité à la lisibilité IDE
   - Cohérence avec mypy --strict
   - Alway in english language

Exemple de style pour une méthode :

```python
def optimize_strategy(parameters: dict[str, tuple[float, float]]) -> list[dict]:
    """Optimize strategy parameters. Used when this happens, and this implementation is useful because of [...]
    
    **Args**:
    - `parameters`: Dictionnary of values to test
      (ex: {"window": (10, 50), "threshold": (0.1, 0.5)})
    
    **Returns**:
    - `list[dict]`: Best combination sorted by performance
    
    **Exemple**:
    ```python
    optimize_strategy({"window": (10, 20)})
    [{"window": 15, "sharpe": 1.2}, ...]
    ```
    """
